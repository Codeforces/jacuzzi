<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <description>
    Jacuzzi works around java.sql.Connection and it is all you need to provide. 
    Jacuzzi don't use any configuration files and uses just a few annotations. 
    It doesn't take care about abstract cross-database query language, use native 
    SQL to write queries.      
  </description>
  <modelVersion>4.0.0</modelVersion>
  <groupId>jacuzzi</groupId>
  <artifactId>jacuzzi</artifactId>
  <packaging>jar</packaging>
  <version>0.0.21</version>
  <name>jacuzzi</name>
  <url>http://code.google.com/p/jacuzzi</url>
  <licenses>
    <license>
      <name>The GNU General Public License, Version 2</name>
      <url>http://www.gnu.org/licenses/gpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
    </plugins>
  </build>  
  <dependencies>
    <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.14</version>
    </dependency>
    <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
        <version>2.1_3</version>
    </dependency> 
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>hsqldb</groupId>
        <artifactId>hsqldb</artifactId>
        <version>1.8.0.7</version>
        <scope>test</scope>
    </dependency>  
  </dependencies>
</project>
